{"version":3,"sources":["components/navbar/Navbar.js","components/contacts/Contact.js","action/contactAction.js","action/type.js","components/contacts/Contacts.js","reducer/contactReducer.js","reducer/index.js","store.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/pages/About.js","components/pages/Notfound.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","state","menuToggle","navMenuToggle","setState","this","props","brand","addContact","contacts","about","className","style","color","to","textDecoration","onClick","Component","Contact","toggle","onClickToggle","onClickDelete","id","deleteContact","contact","name","email","phone","website","company","address","class","float","bind","marginRight","zipcode","connect","dispatch","axios","delete","then","response","type","payload","Contacts","getContacts","items","map","item","key","propTypes","PropTypes","array","isRequired","func","get","data","initialState","combineReducers","action","filter","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","AddContact","handleSubmit","e","preventDefault","newContact","history","push","handleChange","target","value","onSubmit","For","placeholder","onChange","post","EditContact","updContact","match","params","updateContact","nextProps","getContact","put","About","marginTop","marginBottom","marginLeft","Notfound","App","exact","path","component","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f6cbbac9.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"../../css/Navbar.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Navbar extends Component {\r\n  state = { menuToggle: false };\r\n  navMenuToggle = () => {\r\n    this.setState({ menuToggle: !this.state.menuToggle });\r\n  };\r\n  render() {\r\n    const { brand, addContact, contacts, about } = this.props;\r\n    return (\r\n      <div>\r\n        <div className=\"navbar-des\">\r\n          <div className=\"navbar-des-one\">\r\n            <h2 className=\"brand\">\r\n              <span style={{ color: \"gold\" }}>{brand} </span>\r\n            </h2>\r\n          </div>\r\n          <div className=\"navbar-des-two\">\r\n            <ul className=\"navbar-des-ul\">\r\n              <li className=\"navbar-des-li\">\r\n                <div className=\"navbar-des-a\">\r\n                  {\" \"}\r\n                  <Link\r\n                    to=\"/\"\r\n                    style={{ textDecoration: \"none\", color: \"white\" }}\r\n                  >\r\n                    {contacts}\r\n                  </Link>\r\n                </div>\r\n              </li>\r\n              <li className=\"navbar-des-li\">\r\n                <div className=\"navbar-des-a\">\r\n                  {\" \"}\r\n                  <Link\r\n                    to=\"/addcontact\"\r\n                    style={{ textDecoration: \"none\", color: \"white\" }}\r\n                  >\r\n                    {addContact}\r\n                  </Link>\r\n                </div>\r\n              </li>\r\n              <li className=\"navbar-des-li\">\r\n                <div className=\"navbar-des-a\">\r\n                  {\" \"}\r\n                  <Link\r\n                    to=\"/about\"\r\n                    style={{ textDecoration: \"none\", color: \"white\" }}\r\n                  >\r\n                    {about}\r\n                  </Link>\r\n                </div>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        {/* mobile view */}\r\n        <div className=\"navbar-mob\">\r\n          <div className=\"navbar-mob-one\">\r\n            <h2>\r\n              <span style={{ color: \"gold\" }}>{brand} </span>\r\n              <i\r\n                onClick={this.navMenuToggle}\r\n                className=\"fas fa-bars hamburger\"\r\n              />\r\n            </h2>\r\n          </div>\r\n          <div className=\"navbar-mob-two\">\r\n            {this.state.menuToggle ? (\r\n              <ul className=\"navbar-mob-ul\">\r\n                <li className=\"navbar-mob-li\">\r\n                  <div className=\"navbar-mob-a\">\r\n                    <Link\r\n                      to=\"/\"\r\n                      style={{ textDecoration: \"none\", color: \"white\" }}\r\n                    >\r\n                      {contacts}\r\n                    </Link>\r\n                  </div>\r\n                </li>\r\n                <li className=\"navbar-mob-li\">\r\n                  <div className=\"navbar-mob-a\">\r\n                    <Link\r\n                      to=\"/addcontact\"\r\n                      style={{ textDecoration: \"none\", color: \"white\" }}\r\n                    >\r\n                      {addContact}\r\n                    </Link>\r\n                  </div>\r\n                </li>\r\n                <li className=\"navbar-mob-li\">\r\n                  <div className=\"navbar-mob-a\">\r\n                    <Link\r\n                      to=\"/about\"\r\n                      style={{ textDecoration: \"none\", color: \"white\" }}\r\n                    >\r\n                      {about}\r\n                    </Link>\r\n                  </div>\r\n                </li>\r\n              </ul>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n\r\nNavbar.propTypes = {\r\n  brand: PropTypes.string.isRequired,\r\n  home: PropTypes.string.isRequired,\r\n  addContact: PropTypes.string.isRequired,\r\n  listTodos: PropTypes.string.isRequired,\r\n  about: PropTypes.string.isRequired\r\n};\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteContact } from \"../../action/contactAction\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../../css/Contact.css\";\r\n\r\nclass Contact extends Component {\r\n  state = { toggle: false };\r\n  onClickToggle = () => {\r\n    this.setState({ toggle: !this.state.toggle });\r\n  };\r\n\r\n  onClickDelete = (id) => {\r\n    this.props.deleteContact(id);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      id,\r\n      name,\r\n      email,\r\n      phone,\r\n      website,\r\n      company,\r\n      address\r\n    } = this.props.contact;\r\n    return (\r\n      <div className=\"container\">\r\n        <h1 className=\"contact-h1\">\r\n          name: {name}{\" \"}\r\n          <i onClick={this.onClickToggle} class=\"fas fa-caret-down\" />\r\n          <i\r\n            class=\"fas fa-trash-alt\"\r\n            style={{ float: \"right\", color: \"red\" }}\r\n            onClick={this.onClickDelete.bind(this, id)}\r\n          />\r\n          <Link to={`/editcontact/${id}`}>\r\n            <i\r\n              style={{\r\n                float: \"right\",\r\n                marginRight: \"0.5rem\",\r\n                color: \"blue\"\r\n              }}\r\n              class=\"fas fa-user-edit\"\r\n            />\r\n          </Link>\r\n        </h1>\r\n        {this.state.toggle ? (\r\n          <ul className=\"container-inner\">\r\n            <li className=\"container-inner-li\">email: {email}</li>\r\n            <li className=\"container-inner-li\">phone: {phone}</li>\r\n            <li className=\"container-inner-li\">website: {website}</li>\r\n            <li className=\"container-inner-li\">company name: {company.name}</li>\r\n            <li className=\"container-inner-li\">zipcode: {address.zipcode}</li>\r\n          </ul>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired,\r\n  deleteContact: PropTypes.func.isRequired\r\n};\r\nexport default connect(null, { deleteContact })(Contact);\r\n","import {\r\n  GET_CONTACT,\r\n  GET_CONTACTS,\r\n  DELETE_CONTACT,\r\n  ADD_CONTACT,\r\n  UPDATE_CONTACT\r\n} from \"../action/type\";\r\n\r\nimport axios from \"axios\";\r\n\r\nexport const getContacts = () => (dispatch) => {\r\n  axios.get(\"http://jsonplaceholder.typicode.com/users\").then((response) =>\r\n    dispatch({\r\n      type: GET_CONTACTS,\r\n      payload: response.data\r\n    })\r\n  );\r\n};\r\n\r\nexport const getContact = (id) => (dispatch) => {\r\n  axios\r\n    .get(`http://jsonplaceholder.typicode.com/users/${id}`)\r\n    .then((response) =>\r\n      dispatch({\r\n        type: GET_CONTACT,\r\n        payload: response.data\r\n      })\r\n    );\r\n};\r\n\r\nexport const deleteContact = (id) => (dispatch) => {\r\n  axios\r\n    .delete(`http://jsonplaceholder.typicode.com/users/${id}`)\r\n    .then((response) =>\r\n      dispatch({\r\n        type: DELETE_CONTACT,\r\n        payload: id\r\n      })\r\n    );\r\n};\r\n\r\nexport const addContact = (newContact) => (dispatch) => {\r\n  axios\r\n    .post(\"http://jsonplaceholder.typicode.com/users\", newContact)\r\n    .then((response) =>\r\n      dispatch({\r\n        type: ADD_CONTACT,\r\n        payload: response.data\r\n      })\r\n    );\r\n};\r\n\r\nexport const updateContact = (item) => (dispatch) => {\r\n  axios\r\n    .put(`http://jsonplaceholder.typicode.com/users/${item.id}`, item)\r\n    .then((response) =>\r\n      dispatch({\r\n        type: UPDATE_CONTACT,\r\n        payload: response.data\r\n      })\r\n    );\r\n};\r\n","export const GET_CONTACT = \"GET_CONTACT\";\r\nexport const GET_CONTACTS = \"GET_CONTACTS\";\r\nexport const DELETE_CONTACT = \"DELETE_CONTACT\";\r\nexport const ADD_CONTACT = \"ADD_CONTACT\";\r\nexport const UPDATE_CONTACT = \"UPDATE_CONTACT\";\r\n","import React, { Component } from \"react\";\r\nimport Contact from \"./Contact\";\r\nimport { connect } from \"react-redux\";\r\nimport { getContacts } from \"../../action/contactAction\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Contacts extends Component {\r\n  componentDidMount() {\r\n    this.props.getContacts();\r\n  }\r\n  render() {\r\n    const { items } = this.props;\r\n    return (\r\n      <div>\r\n        {items.map((item) => (\r\n          <Contact contact={item} key={item.id} />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n  items: PropTypes.array.isRequired,\r\n  getContacts: PropTypes.func.isRequired\r\n};\r\nconst mapStateToProps = (state) => ({ items: state.contact.items });\r\nexport default connect(mapStateToProps, { getContacts })(Contacts);\r\n","import {\r\n  GET_CONTACT,\r\n  GET_CONTACTS,\r\n  DELETE_CONTACT,\r\n  ADD_CONTACT,\r\n  UPDATE_CONTACT\r\n} from \"../action/type\";\r\n\r\nconst initialState = {\r\n  items: [],\r\n  item: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  const { items } = state;\r\n  switch (action.type) {\r\n    case GET_CONTACT:\r\n      return {\r\n        ...state,\r\n        item: action.payload\r\n      };\r\n\r\n    case GET_CONTACTS:\r\n      return {\r\n        ...state,\r\n        items: action.payload\r\n      };\r\n\r\n    case DELETE_CONTACT:\r\n      return {\r\n        ...state,\r\n        items: items.filter((item) => item.id !== action.payload)\r\n      };\r\n\r\n    case ADD_CONTACT:\r\n      return {\r\n        ...state,\r\n        items: [action.payload, ...state.items]\r\n      };\r\n\r\n    case UPDATE_CONTACT:\r\n      return {\r\n        ...state,\r\n        items: state.items.map((item) =>\r\n          item.id === action.payload.id ? (item = action.payload) : item\r\n        )\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport contactReducer from \"./contactReducer\";\r\n\r\nexport default combineReducers({\r\n  contact: contactReducer\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducer/index\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(...middleware),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\n\r\nexport default store;\r\n","import React, { Component } from \"react\";\r\nimport { addContact } from \"../../action/contactAction\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport \"../../css/AddContact.css\";\r\n\r\nclass AddContact extends Component {\r\n  state = { name: \"\", email: \"\", phone: \"\" };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n    const newContact = {\r\n      name,\r\n      phone,\r\n      email\r\n    };\r\n\r\n    this.props.addContact(newContact);\r\n\r\n    this.setState({ name: \"\", email: \"\", phone: \"\" });\r\n\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone } = this.state;\r\n    return (\r\n      <div className=\"container-form\">\r\n        <form onSubmit={this.handleSubmit}>\r\n          <h1 className=\"add-contact\">Add Contacts</h1>\r\n          <label For=\"\"></label>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"entername\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={this.handleChange}\r\n            className=\"input-inner\"\r\n          />\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={this.handleChange}\r\n            className=\"input-inner\"\r\n          />\r\n          <input\r\n            type=\"phone\"\r\n            placeholder=\"Enter phone number\"\r\n            name=\"phone\"\r\n            value={phone}\r\n            onChange={this.handleChange}\r\n            className=\"input-inner\"\r\n          />\r\n          <button>SUBMIT</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddContact.propTypes = {\r\n  addContact: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, { addContact })(AddContact);\r\n","import React, { Component } from \"react\";\r\nimport { getContact, updateContact } from \"../../action/contactAction\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport \"../../css/AddContact.css\";\r\n\r\nclass EditContact extends Component {\r\n  state = { name: \"\", email: \"\", phone: \"\" };\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    const { name, email, phone } = nextProps.item;\r\n    this.setState({\r\n      name,\r\n      email,\r\n      phone\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getContact(id);\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n    const { id } = this.props.match.params;\r\n    const updContact = {\r\n      id,\r\n      name,\r\n      phone,\r\n      email\r\n    };\r\n\r\n    this.props.updateContact(updContact);\r\n\r\n    this.setState({ name: \"\", email: \"\", phone: \"\" });\r\n\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone } = this.state;\r\n    return (\r\n      <div className=\"container-form\">\r\n        <form onSubmit={this.handleSubmit}>\r\n          <h1 className=\"add-contact\">Edit Contact</h1>\r\n          <label For=\"\"></label>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"entername\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={this.handleChange}\r\n            className=\"input-inner\"\r\n          />\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={this.handleChange}\r\n            className=\"input-inner\"\r\n          />\r\n          <input\r\n            type=\"phone\"\r\n            placeholder=\"Enter phone number\"\r\n            name=\"phone\"\r\n            value={phone}\r\n            onChange={this.handleChange}\r\n            className=\"input-inner\"\r\n          />\r\n          <button>SUBMIT</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  item: state.contact.item\r\n});\r\n\r\nEditContact.propTypes = {\r\n  item: PropTypes.object.isRequired,\r\n  getContact: PropTypes.func.isRequired,\r\n  updateContact: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(mapStateToProps, { getContact, updateContact })(\r\n  EditContact\r\n);\r\n","import React from \"react\";\r\n\r\nfunction About() {\r\n  return (\r\n    <div>\r\n      <h1 style={{ marginTop: \"1rem\", marginBottom: \"1rem\" }}>\r\n        What is the app about!!!!\r\n      </h1>\r\n      <p style={{ marginLeft: \"0.5rem\", marginBottom: \"0.5rem\" }}>\r\n        This app consumes data from jasonplaceholde a fake REST API. Add, Delete\r\n        and Edit functionality were implemented.\r\n      </p>\r\n      <p style={{ marginLeft: \"0.5rem\", marginBottom: \"0.5rem\" }}>\r\n        routing was also implemented using the react-router-dom\r\n      </p>\r\n      <p style={{ marginLeft: \"0.5rem\", marginBottom: \"0.5rem\" }}>\r\n        The navbar was build from scratch\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","import React from \"react\";\r\n\r\nfunction Notfound() {\r\n  return (\r\n    <div>\r\n      <h1>This page doesnot exist</h1>\r\n      <p>Error!!!!!!</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Notfound;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Navbar from \"./components/navbar/Navbar\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact from \"./components/contacts/EditContact\";\nimport About from \"./components/pages/About\";\nimport Notfound from \"./components/pages/Notfound\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <div className=\"App\">\n          <Navbar\n            brand=\"Jason\"\n            addContact=\"addContact\"\n            contacts=\"contacts\"\n            about=\"About\"\n          />\n          <Switch>\n            <Route exact path=\"/\" component={Contacts} />\n            <Route exact path=\"/addcontact\" component={AddContact} />\n            <Route exact path=\"/editcontact/:id\" component={EditContact} />\n            <Route exact path=\"/about\" component={About} />\n            <Route component={Notfound} />\n          </Switch>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}